# AGPM Manifest
# This file defines your Claude Code resource dependencies

# Add your Git repository sources here
# Example: official = "https://github.com/aig787/agpm-community.git"
[sources]

# Project-specific template variables (optional)
# Provides context to AI agents - use any structure you want!
# [project]
# style_guide = "docs/STYLE_GUIDE.md"
# max_line_length = 100
# test_framework = "pytest"
#
# [project.paths]
# architecture = "docs/ARCHITECTURE.md"
# conventions = "docs/CONVENTIONS.md"
#
# Access in templates: {{ agpm.project.style_guide }}

# Tool type configurations (multi-tool support)
[tools]

[tools.claude-code]
path = ".claude"
# Note: hooks and mcp-servers merge into configuration files (no file installation)
resources = { agents = { path = "agents", flatten = true }, commands = { path = "commands", flatten = true }, hooks = { merge-target = ".claude/settings.local.json" }, mcp-servers = { merge-target = ".mcp.json" }, scripts = { path = "scripts", flatten = false }, snippets = { path = "snippets", flatten = false } }

[tools.opencode]
path = ".opencode"
# Note: MCP servers merge into opencode.json (no file installation)
resources = { agents = { path = "agent", flatten = true }, commands = { path = "command", flatten = true }, mcp-servers = { merge-target = ".opencode/opencode.json" }, snippets = { path = "snippet", flatten = false } }

[tools.agpm]
path = ".agpm"
resources = { snippets = { path = "snippets", flatten = false } }

# Default tool overrides (optional)
# Override which tool is used by default for each resource type
# [default-tools]
# snippets = "claude-code"  # Override default (agpm) for Claude-only users
# agents = "opencode"        # Use OpenCode by default for agents

# Patches - override resource fields without forking (optional)
# [patch.agents.my-agent]
# model = "claude-3-haiku"
# temperature = "0.7"
#
# [patch.commands.deploy]
# timeout = "300"

# Add your agent dependencies here
# Example: my-agent = { source = "official", path = "agents/my-agent.md", version = "v1.0.0" }
# For OpenCode: my-agent = { source = "official", path = "agents/my-agent.md", version = "v1.0.0", tool = "opencode" }
[agents]
rust-doc-advanced = { path = "local-deps/claude/agents/rust-doc-advanced.md" }
rust-doc-standard = { path = "local-deps/claude/agents/rust-doc-standard.md" }
rust-expert-advanced = { path = "local-deps/claude/agents/rust-expert-advanced.md" }
rust-expert-standard = { path = "local-deps/claude/agents/rust-expert-standard.md" }
rust-linting-advanced = { path = "local-deps/claude/agents/rust-linting-advanced.md" }
rust-linting-standard = { path = "local-deps/claude/agents/rust-linting-standard.md" }
rust-test-advanced = { path = "local-deps/claude/agents/rust-test-advanced.md" }
rust-test-standard = { path = "local-deps/claude/agents/rust-test-standard.md" }
rust-troubleshooter-advanced = { path = "local-deps/claude/agents/rust-troubleshooter-advanced.md" }
rust-troubleshooter-standard = { path = "local-deps/claude/agents/rust-troubleshooter-standard.md" }
opencode-rust-doc-advanced = { path = "local-deps/opencode/agent/rust-doc-advanced.md", tool = "opencode" }
opencode-rust-doc-standard = { path = "local-deps/opencode/agent/rust-doc-standard.md", tool = "opencode" }
opencode-rust-expert-advanced = { path = "local-deps/opencode/agent/rust-expert-advanced.md", tool = "opencode" }
opencode-rust-expert-standard = { path = "local-deps/opencode/agent/rust-expert-standard.md", tool = "opencode" }
opencode-rust-expert = { path = "local-deps/opencode/agent/rust-expert.md", tool = "opencode" }
opencode-rust-linting-advanced = { path = "local-deps/opencode/agent/rust-linting-advanced.md", tool = "opencode" }
opencode-rust-linting-standard = { path = "local-deps/opencode/agent/rust-linting-standard.md", tool = "opencode" }
opencode-rust-test-advanced = { path = "local-deps/opencode/agent/rust-test-advanced.md", tool = "opencode" }
opencode-rust-test-standard = { path = "local-deps/opencode/agent/rust-test-standard.md", tool = "opencode" }
opencode-rust-troubleshooter-advanced = { path = "local-deps/opencode/agent/rust-troubleshooter-advanced.md", tool = "opencode" }
opencode-rust-troubleshooter-standard = { path = "local-deps/opencode/agent/rust-troubleshooter-standard.md", tool = "opencode" }

# Add your snippet dependencies here
# Example: utils = { source = "official", path = "snippets/utils.md", tool = "agpm" }
[snippets]

# Add your command dependencies here
# Example: deploy = { source = "official", path = "commands/deploy.md" }
[commands]
checkpoint = { path = "local-deps/claude/commands/checkpoint.md" }
commit = { path = "local-deps/claude/commands/commit.md" }
execute = { path = "local-deps/claude/commands/execute.md" }
fact-check-docs = { path = "local-deps/claude/commands/fact-check-docs.md" }
gh-pr-create = { path = "local-deps/claude/commands/gh-pr-create.md" }
lint = { path = "local-deps/claude/commands/lint.md" }
pr-self-review = { path = "local-deps/claude/commands/pr-self-review.md" }
squash = { path = "local-deps/claude/commands/squash.md" }
update-all = { path = "local-deps/claude/commands/update-all.md" }
update-claude = { path = "local-deps/claude/commands/update-claude.md" }
update-docs = { path = "local-deps/claude/commands/update-docs.md" }
update-docstrings = { path = "local-deps/claude/commands/update-docstrings.md" }
opencode-checkpoint = { path = "local-deps/opencode/command/checkpoint.md", tool = "opencode" }
opencode-commit = { path = "local-deps/opencode/command/commit.md", tool = "opencode" }
opencode-execute = { path = "local-deps/opencode/command/execute.md", tool = "opencode" }
opencode-fact-check-docs = { path = "local-deps/opencode/command/fact-check-docs.md", tool = "opencode" }
opencode-gh-pr-create = { path = "local-deps/opencode/command/gh-pr-create.md", tool = "opencode" }
opencode-lint = { path = "local-deps/opencode/command/lint.md", tool = "opencode" }
opencode-pr-self-review = { path = "local-deps/opencode/command/pr-self-review.md", tool = "opencode" }
opencode-squash = { path = "local-deps/opencode/command/squash.md", tool = "opencode" }
opencode-update-all = { path = "local-deps/opencode/command/update-all.md", tool = "opencode" }
opencode-update-claude = { path = "local-deps/opencode/command/update-claude.md", tool = "opencode" }
opencode-update-docs = { path = "local-deps/opencode/command/update-docs.md", tool = "opencode" }
opencode-update-docstrings = { path = "local-deps/opencode/command/update-docstrings.md", tool = "opencode" }

# Add your script dependencies here
# Example: build = { source = "official", path = "scripts/build.sh" }
[scripts]

# Add your hook dependencies here
# Example: pre-commit = { source = "official", path = "hooks/pre-commit.json" }
[hooks]
agpm-update = { path = "local-deps/claude/hooks/agpm-update.json" }

# Add your MCP server dependencies here
# Example: filesystem = { source = "official", path = "mcp-servers/filesystem.json" }
[mcp-servers]
